stopifnot
aa <- NA
stopifnot(is.numeric(aa))
H_gamma <- function(u, gamma = 0) {
stopifnot(is.numeric(gamma),
is.numeric(u))
if (gamma == 0) {
return(u)
} else {
return(1 / gamma * H(u * gamma))
}
}
mc <- function(x) {
if (length(x) >= 3000) {
stop("Please reduce number of observations to less than 3000 (e.g., subsampling).")
}
#### kernel
h <- function(z1, z2) {
(z2 + z1)/(z2 - z1)
}
z <- sort(x, decreasing = TRUE)
z <- z - median(z)
Z.neg <- z[z < 0]
Z.pos <- z[z > 0]
return(median(outer(Z.neg, Z.pos, h)))
}
replicate(10, function() xx <- rnorm(100); mc(xx))
replicate(10, function() {xx <- rnorm(100); mc(xx)})
replicate(10, {xx <- rnorm(100); mc(xx)})
replicate(10, {xx <- rnorm(100); c(skewness(xx), mc(xx))})
library(moments)
replicate(10, {xx <- rnorm(100); c(skewness(xx), mc(xx))})
A <- t(replicate(num.sim, {xx <- rnorm(num.obs); c(skewness(xx), mc(xx))}))
num.sim <- 100
num.obs <- 200
A <- t(replicate(num.sim, {xx <- rnorm(num.obs); c(skewness(xx), mc(xx))}))
B <- t(replicate(num.sim, {xx <- rLambertW(n = num.obs, beta=theta.s[1:2],
gamma = theta.s[3], distname="normal"); c(skewness(xx), mc(xx))}))
library(LambertW)
B <- t(replicate(num.sim, {xx <- rLambertW(n = num.obs, beta=theta.s[1:2],
gamma = theta.s[3], distname="normal"); c(skewness(xx), mc(xx))}))
theta.s <- gamma_01(0.2) # zero mean, unit variance, but positive skewness
B <- t(replicate(num.sim, {xx <- rLambertW(n = num.obs, beta=theta.s[1:2],
gamma = theta.s[3], distname="normal"); c(skewness(xx), mc(xx))}))
colnames(A) <- colnames(B) <- c("MedCouple", "Pearson Skewness")
par(mfrow=c(2, 2), mar=c(4, 4, 3, 1))
plot(A, main = "Gaussian")
boxplot(A)
abline(h = 0)
plot(B, main = "Lambert W x Gaussian")
boxplot(B)
abline(h = mLambertW(beta=theta.s[1:2], gamma = theta.s[3],
distname="normal")[3])
par(op)
colMeans(A)
apply(A, 2, sd)
colMeans(B)
apply(B, 2, sd)
